Description: >
    Creates the Chronos-MA TaskDefinition, Service, ListenerRule and ServiceRole.

Mappings:
  EnvironmentConfig:
    t:
      TargetGroupARN: arn:aws:elasticloadbalancing:eu-west-1:714079672139:targetgroup/pnlttg-ecs-chronos-ma/afdaf0c596d970b7
      ListenerARN: arn:aws:elasticloadbalancing:eu-west-1:714079672139:listener/app/pnltalb-t01ew1xx-chronos-ma/bb09f8e42f044b81/2172d5628f8ff424
      TaskRoleARN: arn:aws:iam::714079672139:role/ecsTaskExecutionRole
      Region: eu-west-1
      DesiredCount: 1

Parameters:
  Environment:
    Description: Application Environment (T|A|P)
    Type: String
    AllowedValues:
      - t
      - a
      - p

Resources:
    Service: 
        Type: AWS::ECS::Service
        DependsOn: ListenerRule
        Properties: 
            ServiceName: !Sub pnl${Environment}ecs-service-chronos-ma
            Cluster: !Sub pnl${Environment}ecs-${Environment}01ew1xx-chronos
            Role: !Ref ServiceRole
            DesiredCount: !FindInMap [EnvironmentConfig, !Ref Environment, DesiredCount]
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers: 
                - ContainerName: "chronos-monitor"
                  ContainerPort: 80
                  TargetGroupArn: !FindInMap [EnvironmentConfig, !Ref Environment, TargetGroupARN]

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            TaskRoleArn: !FindInMap [EnvironmentConfig, !Ref Environment, TaskRoleARN]
            Family: chronos-monitor
            ContainerDefinitions:
                - Name: chronos-monitor
                  Essential: true
                  Image: 714079672139.dkr.ecr.eu-west-1.amazonaws.com/chronos-monitor:latest
                  Memory: 2048
                  Cpu: 1024
                  PortMappings:
                    - ContainerPort: 80
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: "/ecs/pnlt-chronos-monitor"
                        awslogs-region: !FindInMap [EnvironmentConfig, !Ref Environment, Region]
                        awslogs-stream-prefix: "ecs"

    # CloudWatchLogsGroup:
    #     Type: AWS::Logs::LogGroup
    #     Properties: 
    #         LogGroupName: !Ref AWS::StackName
    #         RetentionInDays: 365  
    
    ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !FindInMap [EnvironmentConfig, !Ref Environment, ListenerARN]
            Priority: 1
            Conditions:
                - Field: path-pattern
                  Values: 
                    - /
            Actions:
                - TargetGroupArn: !FindInMap [EnvironmentConfig, !Ref Environment, TargetGroupARN]
                  Type: forward

    # This IAM Role grants the service access to register/unregister with the 
    # Application Load Balancer (ALB). It is based on the default documented here:
    # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service_IAM_role.html
    ServiceRole: 
        Type: AWS::IAM::Role
        Properties: 
            RoleName: !Sub pnl${Environment}ecs-service-chronos-ma
            Path: /
            AssumeRolePolicyDocument: |
                {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                        "Action": [ "sts:AssumeRole" ]
                    }]
                }
            Policies: 
                - PolicyName: !Sub pnl${Environment}ecs-service-chronos-ma
                  PolicyDocument: 
                    {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:AuthorizeSecurityGroupIngress",
                                    "ec2:Describe*",
                                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                    "elasticloadbalancing:Describe*",
                                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                    "elasticloadbalancing:DeregisterTargets",
                                    "elasticloadbalancing:DescribeTargetGroups",
                                    "elasticloadbalancing:DescribeTargetHealth",
                                    "elasticloadbalancing:RegisterTargets"
                                ],
                                "Resource": "*"
                        }]
                    }

